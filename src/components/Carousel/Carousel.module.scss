@use 'sass:color';
@import '../../styles/mixins.scss';
@import '../../styles/colors.scss';

$content-radius: 31rem;
$content-radius-mobile: 21rem;
$title-height: 6rem;
$carousel-button-radius: 5rem;
$carousel-button-radius-mobile: 5rem;

@mixin carousel-area {
  display: grid;
  grid-template: 'title' #{$title-height} 'content' #{$content-radius} / 1fr;
  @include mobile {
    grid-template: 'title' #{$title-height} 'content' #{$content-radius-mobile} / 1fr;
  }
  gap: 1rem;

  .carouselAreaContent {
    display: grid;
    grid-area: content;
    place-items: center;
    width: 100%;
    height: 100%;
  }
}

$grid-margin-correction: -15rem;

@mixin responsiveSideArea {
  @include notLarge {
    grid-template: 'content' 1fr;
    .title {
      display: none;
    }

    .carouselAreaContent {
      align-items: start;
    }
  }
}

.container {
  display: grid;
  grid-template: 'previous current next' max-content / 1fr 2fr 1fr;
  @include notLarge {
    grid-template:
      'previous current next' max-content / max(#{$carousel-button-radius}, 1fr)
      max-content max(#{$carousel-button-radius}, 1fr);
  }
  @include mobile {
    grid-template: 'previous current next' / #{$carousel-button-radius-mobile} 1fr #{$carousel-button-radius-mobile};
  }

  .next {
    grid-area: next;
    @include carousel-area;
    margin-left: $grid-margin-correction;

    @include responsiveSideArea;
    @include notLarge {
      margin-left: 0;
    }
  }

  .current {
    grid-area: current;
    justify-items: center;
    @include carousel-area;
    gap: 3rem;

    @include notLarge {
      .frame {
        margin-left: #{$carousel-button-radius * -1};
        margin-right: #{$carousel-button-radius * -1};
      }
    }
  }

  .previous {
    grid-area: previous;
    @include carousel-area;
    margin-right: $grid-margin-correction;

    @include responsiveSideArea;
    @include notLarge {
      margin-right: 0;
    }
  }
}

.title {
  display: grid;
  place-items: center;
  grid-template: 'album' 1.5rem 'music' 3rem 'link' 0.8rem / 1fr;

  .album {
    color: $ff_black;
    font-weight: 900;
    font-size: 1.5rem;
    grid-area: album;
  }

  .musicName {
    @include daggersquare;
    font-size: 3rem;
    @include mobile {
      font-size: 2rem;
    }
    color: $ff_white;
    grid-area: music;
  }

  .link {
    grid-area: link;
    font-weight: 100;
    font-size: 0.8rem;
    display: grid;
    grid-auto-flow: column;
    place-items: center;
    gap: 0.3rem;
    color: $ff_white;
    text-decoration: none;
  }

  &.disabled {
    .link,
    .musicName,
    .album {
      color: color.adjust($ff_white, $alpha: -0.6);
      cursor: auto;
    }
  }
}

.frame {
  position: relative;
  display: grid;
  place-items: center;
  height: $content-radius;
  width: $content-radius;
  @include mobile {
    height: $content-radius-mobile;
    width: $content-radius-mobile;
  }

  .frameBackground {
    position: absolute;
    height: $content-radius;
    @include mobile {
      height: 100%;
    }
  }

  .cover {
    // display: none;
    position: relative;
    top: -0.5rem;
    height: 21rem;
    width: 21rem;
    background-position: center;
    background-size: contain;

    .soon {
      color: $ff_white;
    }

    .buttonOverlay {
      display: grid;
      place-items: center;
      background-color: color.adjust($ff_dark_grey, $alpha: -0.5);
      height: 100%;

      .button {
        display: block;
        width: 50%;
        height: 50%;

        .icon {
          transition: transform 0.5s;
        }

        &:hover {
          .icon {
            transform: scale(1.1);
          }
        }
      }
    }
  }
}

.carouselButton {
  all: unset;
  height: $carousel-button-radius;
  width: $carousel-button-radius;
  @include mobile {
    height: $carousel-button-radius-mobile;
    width: $carousel-button-radius-mobile;
  }
  cursor: pointer;
  transition: transform 0.5s;
  .icon {
    height: $carousel-button-radius;
    width: $carousel-button-radius;
    @include mobile {
      height: $carousel-button-radius-mobile;
      width: $carousel-button-radius-mobile;
    }
    color: $ff_white;
  }

  &:disabled {
    pointer-events: none;
    cursor: auto;
    .icon {
      color: color.adjust($ff_white, $alpha: -0.6);
    }
  }

  &:active {
    transform: scale(1.1);
  }
}
